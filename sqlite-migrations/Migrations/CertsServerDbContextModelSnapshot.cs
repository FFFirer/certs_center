// <auto-generated />
using System;
using CertsServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CertsServer.Migrations
{
    [DbContext(typeof(CertsServerDbContext))]
    partial class CertsServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "10.0.0-preview.5.25277.114");

            modelBuilder.Entity("CertsServer.Data.TicketCertificateEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NotAfter")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NotBefore")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TicketEntityId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TicketId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TicketEntityId");

                    b.ToTable("TicketCertificates");
                });

            modelBuilder.Entity("CertsServer.Data.TicketEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("DomainNames")
                        .HasColumnType("TEXT");

                    b.Property<string>("PfxPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("CertsServer.Data.TicketCertificateEntity", b =>
                {
                    b.HasOne("CertsServer.Data.TicketEntity", null)
                        .WithMany("Certificates")
                        .HasForeignKey("TicketEntityId");
                });

            modelBuilder.Entity("CertsServer.Data.TicketEntity", b =>
                {
                    b.Navigation("Certificates");
                });
#pragma warning restore 612, 618
        }
    }
}
