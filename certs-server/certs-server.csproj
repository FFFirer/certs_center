<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net10.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <RootNamespace>CertsServer</RootNamespace>
    <UserSecretsId>5be23d08-54c4-488c-acff-cca75c11ef03</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AgileConfig.Client" />
    <PackageReference Include="AlibabaCloud.SDK.Alidns20150109" />
    <PackageReference Include="LettuceEncrypt" />
    <PackageReference Include="Mapster" />
    <PackageReference Include="MediatR" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" />
    <PackageReference Include="NSwag.AspNetCore" />
    <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" />
    <PackageReference Include="OpenTelemetry.Extensions.Hosting" />
    <PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Http" />
    <PackageReference Include="Quartz.AspNetCore" />
    <PackageReference Include="Serilog.AspNetCore" />
    <PackageReference Include="Serilog.Enrichers.AssemblyName" />
    <PackageReference Include="Serilog.Enrichers.ClientInfo" />
    <PackageReference Include="Serilog.Enrichers.Environment" />
    <PackageReference Include="Serilog.Enrichers.Process" />
    <PackageReference Include="Serilog.Enrichers.Span" />
    <PackageReference Include="Serilog.Sinks.Console" />
    <PackageReference Include="Serilog.Sinks.OpenTelemetry" />
    <PackageReference Include="Vite.AspNetCore" />
  </ItemGroup>

  <PropertyGroup>
    <EnablePublishBuildAssets Condition=" '$(Configuration)' == 'Release' AND '$(EnablePublishBuildAssets)' == ''">true</EnablePublishBuildAssets>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\acme\acme.csproj" />
  </ItemGroup>


  <ItemGroup>
    <Content Remove="package.json" />
    <Content Remove="package-lock.json" />
    <Content Remove="tsconfig.json" />
    <Content Remove="tsconfig.node.json" />
    <!-- Don't remove this line or your manifest.json won't be copied on publish -->
    <!-- <Content Include="wwwroot\dist\**\*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content> -->
    <!-- <Content Include="wwwroot\dist\.vite\**" /> -->
    <Content Remove="wwwroot\dist\**\*" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Assets\" />
  </ItemGroup>

  <!-- Ensure Node environment on Build -->
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build;PublishBuildAssets"
    Condition=" '$(EnablePublishBuildAssets)' == 'true' and !Exists('node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'"
      Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high"
      Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <!-- Install Node packages -->
    <Exec Command="pnpm install" />
  </Target>

  <!-- Build the final assets -->
  <Target Name="PublishBuildAssets" BeforeTargets="Rebuild;Build;ResolveProjectStaticWebAssets"
    Condition=" '$(EnablePublishBuildAssets)' == 'true' ">

    <!-- Build the final assets -->
    <Exec Command="pnpm run build" />
    <ItemGroup>
      <Content Include="wwwroot\dist\**\*">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
    </ItemGroup>
  </Target>

</Project>